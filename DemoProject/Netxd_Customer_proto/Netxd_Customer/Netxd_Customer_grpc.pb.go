// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: Netxd_Customer/Netxd_Customer.proto

package grpc_mongo

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// Netxd_DalServiceClient is the client API for Netxd_DalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type Netxd_DalServiceClient interface {
	CreateCustomer(ctx context.Context, in *CustomerProfile, opts ...grpc.CallOption) (*CustomerResponse, error)
}

type netxd_DalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNetxd_DalServiceClient(cc grpc.ClientConnInterface) Netxd_DalServiceClient {
	return &netxd_DalServiceClient{cc}
}

func (c *netxd_DalServiceClient) CreateCustomer(ctx context.Context, in *CustomerProfile, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/Netxd_Dal.Netxd_DalService/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Netxd_DalServiceServer is the server API for Netxd_DalService service.
// All implementations must embed UnimplementedNetxd_DalServiceServer
// for forward compatibility
type Netxd_DalServiceServer interface {
	CreateCustomer(context.Context, *CustomerProfile) (*CustomerResponse, error)
	mustEmbedUnimplementedNetxd_DalServiceServer()
}

// UnimplementedNetxd_DalServiceServer must be embedded to have forward compatible implementations.
type UnimplementedNetxd_DalServiceServer struct {
}

func (UnimplementedNetxd_DalServiceServer) CreateCustomer(context.Context, *CustomerProfile) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomer not implemented")
}
func (UnimplementedNetxd_DalServiceServer) mustEmbedUnimplementedNetxd_DalServiceServer() {}

// UnsafeNetxd_DalServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to Netxd_DalServiceServer will
// result in compilation errors.
type UnsafeNetxd_DalServiceServer interface {
	mustEmbedUnimplementedNetxd_DalServiceServer()
}

func RegisterNetxd_DalServiceServer(s grpc.ServiceRegistrar, srv Netxd_DalServiceServer) {
	s.RegisterService(&Netxd_DalService_ServiceDesc, srv)
}

func _Netxd_DalService_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Netxd_DalServiceServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Netxd_Dal.Netxd_DalService/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Netxd_DalServiceServer).CreateCustomer(ctx, req.(*CustomerProfile))
	}
	return interceptor(ctx, in, info, handler)
}

// Netxd_DalService_ServiceDesc is the grpc.ServiceDesc for Netxd_DalService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Netxd_DalService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Netxd_Dal.Netxd_DalService",
	HandlerType: (*Netxd_DalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCustomer",
			Handler:    _Netxd_DalService_CreateCustomer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Netxd_Customer/Netxd_Customer.proto",
}
